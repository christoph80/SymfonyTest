<?php

/**
 * BaseDirective
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $district
 * @property Doctrine_Collection $DirectiveUser
 * @property Doctrine_Collection $DirectiveContent
 * @property Doctrine_Collection $DirectiveTopic
 * 
 * @method string              getDistrict()         Returns the current record's "district" value
 * @method Doctrine_Collection getDirectiveUser()    Returns the current record's "DirectiveUser" collection
 * @method Doctrine_Collection getDirectiveContent() Returns the current record's "DirectiveContent" collection
 * @method Doctrine_Collection getDirectiveTopic()   Returns the current record's "DirectiveTopic" collection
 * @method Directive           setDistrict()         Sets the current record's "district" value
 * @method Directive           setDirectiveUser()    Sets the current record's "DirectiveUser" collection
 * @method Directive           setDirectiveContent() Sets the current record's "DirectiveContent" collection
 * @method Directive           setDirectiveTopic()   Sets the current record's "DirectiveTopic" collection
 * 
 * @package    HELLO_WORLD
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseDirective extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('directive');
        $this->hasColumn('district', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'unique' => true,
             'length' => '255',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('User as DirectiveUser', array(
             'local' => 'id',
             'foreign' => 'directive_id'));

        $this->hasMany('Content as DirectiveContent', array(
             'local' => 'id',
             'foreign' => 'directive_id'));

        $this->hasMany('Topic as DirectiveTopic', array(
             'local' => 'id',
             'foreign' => 'directive_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}