<?php

/**
 * BaseReply
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $textbody
 * @property integer $thread_id
 * @property integer $user_id
 * @property Thread $Thread
 * @property User $User
 * 
 * @method string  getTextbody()  Returns the current record's "textbody" value
 * @method integer getThreadId()  Returns the current record's "thread_id" value
 * @method integer getUserId()    Returns the current record's "user_id" value
 * @method Thread  getThread()    Returns the current record's "Thread" value
 * @method User    getUser()      Returns the current record's "User" value
 * @method Reply   setTextbody()  Sets the current record's "textbody" value
 * @method Reply   setThreadId()  Sets the current record's "thread_id" value
 * @method Reply   setUserId()    Sets the current record's "user_id" value
 * @method Reply   setThread()    Sets the current record's "Thread" value
 * @method Reply   setUser()      Sets the current record's "User" value
 * 
 * @package    OpenBRD
 * @subpackage model
 * @author     Ralph B. Magnus
 * @version    SVN: $Id: Builder.php 6820 2009-11-30 17:27:49Z jwage $
 */
abstract class BaseReply extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reply');
        $this->hasColumn('textbody', 'string', 2550, array(
             'type' => 'string',
             'notnull' => true,
             'length' => '2550',
             ));
        $this->hasColumn('thread_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Thread', array(
             'local' => 'thread_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('User', array(
             'local' => 'user_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}