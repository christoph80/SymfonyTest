CREATE TABLE content (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL, shortdesc VARCHAR(255) NOT NULL, longdesc TEXT NOT NULL, type VARCHAR(255), full_content VARCHAR(255) NOT NULL, prev_content VARCHAR(255) NOT NULL, thmb_content VARCHAR(255) NOT NULL, user_id INT NOT NULL, directive_id BIGINT NOT NULL, fullaccess_id INT, prevaccess_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX directive_id_idx (directive_id), INDEX user_id_idx (user_id), INDEX fullaccess_id_idx (fullaccess_id), INDEX prevaccess_id_idx (prevaccess_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE directive (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL UNIQUE, misc VARCHAR(255), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE page (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, shortdesc VARCHAR(255) NOT NULL, textbody TEXT NOT NULL, has_content TINYINT(1) DEFAULT '0', created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE ranking (id BIGINT AUTO_INCREMENT, name VARCHAR(255) NOT NULL UNIQUE, prio BIGINT NOT NULL, icon VARCHAR(255) NOT NULL UNIQUE, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE reply (id BIGINT AUTO_INCREMENT, textbody TEXT NOT NULL, thread_id BIGINT, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX thread_id_idx (thread_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE thread (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, textbody TEXT NOT NULL, content_id BIGINT, topic_id BIGINT, user_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX content_id_idx (content_id), INDEX topic_id_idx (topic_id), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE topic (id BIGINT AUTO_INCREMENT, title VARCHAR(255) NOT NULL, directive_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX directive_id_idx (directive_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user (id BIGINT AUTO_INCREMENT, username VARCHAR(255) NOT NULL UNIQUE, password VARCHAR(255) NOT NULL, regkey VARCHAR(255) NOT NULL UNIQUE, role VARCHAR(255), directive_id BIGINT NOT NULL, ranking_id BIGINT NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX directive_id_idx (directive_id), INDEX ranking_id_idx (ranking_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE user_profile (id BIGINT AUTO_INCREMENT, user_id INT NOT NULL, first_name VARCHAR(25), last_name VARCHAR(25), email VARCHAR(50), INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id INT AUTO_INCREMENT, name VARCHAR(255) UNIQUE, description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id INT AUTO_INCREMENT, user_id INT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id, ip_address)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id INT AUTO_INCREMENT, username VARCHAR(128) NOT NULL UNIQUE, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT(1) DEFAULT '1', is_super_admin TINYINT(1) DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX is_active_idx_idx (is_active), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id INT, group_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id INT, permission_id INT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id INT, first_name VARCHAR(20), last_name VARCHAR(20), email VARCHAR(75), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_profile (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, first_name VARCHAR(25), last_name VARCHAR(25), birthday DATE, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
ALTER TABLE content ADD CONSTRAINT content_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE content ADD CONSTRAINT content_prevaccess_id_sf_guard_permission_id FOREIGN KEY (prevaccess_id) REFERENCES sf_guard_permission(id);
ALTER TABLE content ADD CONSTRAINT content_fullaccess_id_sf_guard_permission_id FOREIGN KEY (fullaccess_id) REFERENCES sf_guard_permission(id);
ALTER TABLE content ADD CONSTRAINT content_directive_id_directive_id FOREIGN KEY (directive_id) REFERENCES directive(id) ON DELETE CASCADE;
ALTER TABLE reply ADD CONSTRAINT reply_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE reply ADD CONSTRAINT reply_thread_id_thread_id FOREIGN KEY (thread_id) REFERENCES thread(id) ON DELETE CASCADE;
ALTER TABLE thread ADD CONSTRAINT thread_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE thread ADD CONSTRAINT thread_topic_id_topic_id FOREIGN KEY (topic_id) REFERENCES topic(id) ON DELETE CASCADE;
ALTER TABLE thread ADD CONSTRAINT thread_content_id_content_id FOREIGN KEY (content_id) REFERENCES content(id) ON DELETE CASCADE;
ALTER TABLE topic ADD CONSTRAINT topic_directive_id_directive_id FOREIGN KEY (directive_id) REFERENCES directive(id) ON DELETE CASCADE;
ALTER TABLE user ADD CONSTRAINT user_ranking_id_ranking_id FOREIGN KEY (ranking_id) REFERENCES ranking(id) ON DELETE CASCADE;
ALTER TABLE user ADD CONSTRAINT user_directive_id_directive_id FOREIGN KEY (directive_id) REFERENCES directive(id) ON DELETE CASCADE;
ALTER TABLE user_profile ADD CONSTRAINT user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id) ON DELETE CASCADE;
ALTER TABLE sf_guard_user_profile ADD CONSTRAINT sf_guard_user_profile_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
